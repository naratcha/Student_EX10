
package StudentWebService;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.3
 * Generated source version: 2.2
 * 
 */
@WebService(name = "StudentWebService", targetNamespace = "http://studentservice/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface StudentWebService {


    /**
     * 
     * @param name
     * @param gpa
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "insertStudent", targetNamespace = "http://studentservice/", className = "StudentWebService.InsertStudent")
    @Action(input = "http://studentservice/StudentWebService/insertStudent")
    public void insertStudent(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "gpa", targetNamespace = "")
        double gpa);

    /**
     * 
     * @param name
     * @param gpa
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateStudent", targetNamespace = "http://studentservice/", className = "StudentWebService.UpdateStudent")
    @ResponseWrapper(localName = "updateStudentResponse", targetNamespace = "http://studentservice/", className = "StudentWebService.UpdateStudentResponse")
    @Action(input = "http://studentservice/StudentWebService/updateStudentRequest", output = "http://studentservice/StudentWebService/updateStudentResponse")
    public boolean updateStudent(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "gpa", targetNamespace = "")
        double gpa);

    /**
     * 
     * @return
     *     returns java.util.List&lt;StudentWebService.Student&gt;
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAllStudent", targetNamespace = "http://studentservice/", className = "StudentWebService.FindAllStudent")
    @ResponseWrapper(localName = "findAllStudentResponse", targetNamespace = "http://studentservice/", className = "StudentWebService.FindAllStudentResponse")
    @Action(input = "http://studentservice/StudentWebService/findAllStudentRequest", output = "http://studentservice/StudentWebService/findAllStudentResponse")
    public List<Student> findAllStudent();

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeStudent", targetNamespace = "http://studentservice/", className = "StudentWebService.RemoveStudent")
    @ResponseWrapper(localName = "removeStudentResponse", targetNamespace = "http://studentservice/", className = "StudentWebService.RemoveStudentResponse")
    @Action(input = "http://studentservice/StudentWebService/removeStudentRequest", output = "http://studentservice/StudentWebService/removeStudentResponse")
    public boolean removeStudent(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param id
     * @return
     *     returns StudentWebService.Student
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findStudentById", targetNamespace = "http://studentservice/", className = "StudentWebService.FindStudentById")
    @ResponseWrapper(localName = "findStudentByIdResponse", targetNamespace = "http://studentservice/", className = "StudentWebService.FindStudentByIdResponse")
    @Action(input = "http://studentservice/StudentWebService/findStudentByIdRequest", output = "http://studentservice/StudentWebService/findStudentByIdResponse")
    public Student findStudentById(
        @WebParam(name = "id", targetNamespace = "")
        int id);

}
